unit MonolitoFinanceiro.View.Caixa;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, MonolitoFinanceiro.View.CadastroPadrao,
  Data.DB, System.ImageList, Vcl.ImgList, Vcl.Grids, Vcl.DBGrids, Vcl.StdCtrls,
  Vcl.ExtCtrls, Vcl.WinXPanels;

type
  TfrmCaixa = class(TfrmCadastroPadrao)
    Label2: TLabel;
    edtDocumento: TEdit;
    edtDescricao: TEdit;
    Label3: TLabel;
    edtValor: TEdit;
    Label4: TLabel;
    RadioGroup1: TRadioGroup;
    procedure btnSalvarClick(Sender: TObject);
    procedure btnAlterarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  protected
    procedure Pesquisar; override;
  end;

var
  frmCaixa: TfrmCaixa;

implementation
uses
  MonolitoFinanceiro.Model.Caixa, MonolitoFinanceiro.Utilitarios;
{$R *.dfm}

{ TfrmCadastroPadrao1 }

procedure TfrmCaixa.btnAlterarClick(Sender: TObject);
begin
  inherited;
  edtDocumento.Text := dmCaixa.cdsCaixaNUMERO_DOC.AsString;
  edtDescricao.Text := dmCaixa.cdsCaixaDESCRICAO.AsString;
  edtValor.Text := dmCaixa.cdsCaixaVALOR.AsString;

  if dmCaixa.cdsCaixaTIPO.AsString = 'R' then
    RadioGroup1.ItemIndex := 0
  else
    RadioGroup1.ItemIndex := 1;
end;

procedure TfrmCaixa.btnSalvarClick(Sender: TObject);
var
  LTipo: String;
begin
   if Trim(edtDocumento.Text) = '' then
  begin
    edtDocumento.SetFocus;
    Application.MessageBox('O campo N° Documento não pode ser vazio.', 'Atenção', MB_OK + MB_ICONWARNING); {tipo da janela}
    abort;
  end;
  if Trim(edtValor.Text) = '' then
  begin
    edtValor.SetFocus;
    Application.MessageBox('O campo Valor não pode ser vazio.', 'Atenção', MB_OK + MB_ICONWARNING);
    abort;
  end;
  if RadioGroup1.ItemIndex = -1 then
   begin
     Application.MessageBox('Selecione o tipo do lançamento .', 'Atenção', MB_OK + MB_ICONWARNING);
      abort;
   end;

   LTipo := 'R';
   if RadioGroup1.ItemIndex = 1 then
    LTipo :='D';
   if DataSource1.State in [dsInsert] then
   begin
     dmCaixa.cdsCaixaID.AsString := TUtilitarios.GetID;
     dmCaixa.cdsCaixadata_cadastro.AsDateTime := now;
   end;

   dmCaixa.cdsCaixaNUMERO_DOC.AsString := Trim(edtDocumento.Text);
   dmCaixa.cdsCaixaDESCRICAO.AsString := Trim(edtDescricao.Text);
   dmCaixa.cdsCaixaVALOR.AsCurrency := StrtoFloat(edtValor.Text);
   dmCaixa.cdsCaixaTIPO.AsString := LTipo;

  inherited;

end;

procedure TfrmCaixa.Pesquisar;
var
  FiltroPesquisar: String;}
begin
  FiltroPesquisar := TUtilitarios.LikeFind(edtPesquisar.Text, dbgCadastro);
  dmCaixa.cdsCaixa.Close;
  dmCaixa.cdsCaixa.CommandText := 'Select * from caixa' + FiltroPesquisar;
  dmCaixa.cdsCaixa.Open;
  inherited;
end;

end.
